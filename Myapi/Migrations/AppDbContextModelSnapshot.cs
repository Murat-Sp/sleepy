// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Myapi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Myapi.Models.AdditionalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutSleep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NumbersOfAwakings")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WakeUptime")
                        .HasColumnType("int");

                    b.Property<bool>("coffeineOrEnergyDrinks")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("difficultFallASleep")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("moodInMorning")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("physicalActivity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("streesLevel")
                        .HasColumnType("int");

                    b.Property<int>("timeOfLastEating")
                        .HasColumnType("int");

                    b.Property<int>("timeSleeping")
                        .HasColumnType("int");

                    b.Property<bool>("usingGadgts")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("AdditionalInformation");
                });

            modelBuilder.Entity("Myapi.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Myapi.Models.AdditionalInformation", b =>
                {
                    b.HasOne("Myapi.Models.Users", "User")
                        .WithOne("AdditionalInformation")
                        .HasForeignKey("Myapi.Models.AdditionalInformation", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Myapi.Models.Users", b =>
                {
                    b.Navigation("AdditionalInformation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
